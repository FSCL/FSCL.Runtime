module LDSBenchmark

open FSCL
open FSCL.Compiler
open FSCL.Runtime.Scheduling
open System.Collections.Generic
open Microsoft.FSharp.Quotations
open System.Reflection
open Microsoft.FSharp.Linq.RuntimeHelpers
open System
open FSCL.Compiler.Util
open FSCL.Compiler.FunctionPostprocessing
open FSCL.Language
open System.Runtime.InteropServices
open FSCL.Runtime
open System.Diagnostics
open System.Runtime.InteropServices

type LDSBenchmark() = 
    [<ReflectedDefinition>]
    static member private LDSStrideTest([<AddressSpace(AddressSpace.Local)>] l:char[], o:int[], stride: int, wi:WorkItemInfo) =
        let gid = wi.GlobalID(0)
        l.[gid] <- (char)(gid % 255)
        let lid = wi.LocalID(0)

        // Test reading with a stride
        let mutable val1 = 0
        let mutable val2 = val1 
        val1 <- val1 + (int)l.[(stride) * lid]
        val2 <- val2 + (int)l.[((stride) * lid) + 1]
        val1 <- val1 + (int)l.[((stride) * lid) + 2]
        val2 <- val2 + (int)l.[((stride) * lid) + 3]
        val1 <- val1 + (int)l.[((stride) * lid) + 4]
        val2 <- val2 + (int)l.[((stride) * lid) + 5]
        val1 <- val1 + (int)l.[((stride) * lid) + 6]
        val2 <- val2 + (int)l.[((stride) * lid) + 7]
        val1 <- val1 + (int)l.[((stride) * lid) + 8]
        val2 <- val2 + (int)l.[((stride) * lid) + 9]
        val1 <- val1 + (int)l.[((stride) * lid) + 10]
        val2 <- val2 + (int)l.[((stride) * lid) + 11]
        val1 <- val1 + (int)l.[((stride) * lid) + 12]
        val2 <- val2 + (int)l.[((stride) * lid) + 13]
        val1 <- val1 + (int)l.[((stride) * lid) + 14]
        val2 <- val2 + (int)l.[((stride) * lid) + 15]
        val1 <- val1 + (int)l.[((stride) * lid) + 16]
        val2 <- val2 + (int)l.[((stride) * lid) + 17]
        val1 <- val1 + (int)l.[((stride) * lid) + 18]
        val2 <- val2 + (int)l.[((stride) * lid) + 19]
        val1 <- val1 + (int)l.[((stride) * lid) + 20]
        val2 <- val2 + (int)l.[((stride) * lid) + 21]
        val1 <- val1 + (int)l.[((stride) * lid) + 22]
        val2 <- val2 + (int)l.[((stride) * lid) + 23]
        val1 <- val1 + (int)l.[((stride) * lid) + 24]
        val2 <- val2 + (int)l.[((stride) * lid) + 25]
        val1 <- val1 + (int)l.[((stride) * lid) + 26]
        val2 <- val2 + (int)l.[((stride) * lid) + 27]
        val1 <- val1 + (int)l.[((stride) * lid) + 28]
        val2 <- val2 + (int)l.[((stride) * lid) + 29]
        val1 <- val1 + (int)l.[((stride) * lid) + 30]
        val2 <- val2 + (int)l.[((stride) * lid) + 31]
        val1 <- val1 + (int)l.[((stride) * lid) + 32]
        val2 <- val2 + (int)l.[((stride) * lid) + 33]
        val1 <- val1 + (int)l.[((stride) * lid) + 34]
        val2 <- val2 + (int)l.[((stride) * lid) + 35]
        val1 <- val1 + (int)l.[((stride) * lid) + 36]
        val2 <- val2 + (int)l.[((stride) * lid) + 37]
        val1 <- val1 + (int)l.[((stride) * lid) + 38]
        val2 <- val2 + (int)l.[((stride) * lid) + 39]
        val1 <- val1 + (int)l.[((stride) * lid) + 40]
        val2 <- val2 + (int)l.[((stride) * lid) + 41]
        val1 <- val1 + (int)l.[((stride) * lid) + 42]
        val2 <- val2 + (int)l.[((stride) * lid) + 43]
        val1 <- val1 + (int)l.[((stride) * lid) + 44]
        val2 <- val2 + (int)l.[((stride) * lid) + 45]
        val1 <- val1 + (int)l.[((stride) * lid) + 46]
        val2 <- val2 + (int)l.[((stride) * lid) + 47]
        val1 <- val1 + (int)l.[((stride) * lid) + 48]
        val2 <- val2 + (int)l.[((stride) * lid) + 49]
        val1 <- val1 + (int)l.[((stride) * lid) + 50]
        val2 <- val2 + (int)l.[((stride) * lid) + 51]
        val1 <- val1 + (int)l.[((stride) * lid) + 52]
        val2 <- val2 + (int)l.[((stride) * lid) + 53]
        val1 <- val1 + (int)l.[((stride) * lid) + 54]
        val2 <- val2 + (int)l.[((stride) * lid) + 55]
        val1 <- val1 + (int)l.[((stride) * lid) + 56]
        val2 <- val2 + (int)l.[((stride) * lid) + 57]
        val1 <- val1 + (int)l.[((stride) * lid) + 58]
        val2 <- val2 + (int)l.[((stride) * lid) + 59]
        val1 <- val1 + (int)l.[((stride) * lid) + 60]
        val2 <- val2 + (int)l.[((stride) * lid) + 61]
        val1 <- val1 + (int)l.[((stride) * lid) + 62]
        val2 <- val2 + (int)l.[((stride) * lid) + 63]
        val1 <- val1 + (int)l.[((stride) * lid) + 64]
        val2 <- val2 + (int)l.[((stride) * lid) + 65]
        val1 <- val1 + (int)l.[((stride) * lid) + 66]
        val2 <- val2 + (int)l.[((stride) * lid) + 67]
        val1 <- val1 + (int)l.[((stride) * lid) + 68]
        val2 <- val2 + (int)l.[((stride) * lid) + 69]
        val1 <- val1 + (int)l.[((stride) * lid) + 70]
        val2 <- val2 + (int)l.[((stride) * lid) + 71]
        val1 <- val1 + (int)l.[((stride) * lid) + 72]
        val2 <- val2 + (int)l.[((stride) * lid) + 73]
        val1 <- val1 + (int)l.[((stride) * lid) + 74]
        val2 <- val2 + (int)l.[((stride) * lid) + 75]
        val1 <- val1 + (int)l.[((stride) * lid) + 76]
        val2 <- val2 + (int)l.[((stride) * lid) + 77]
        val1 <- val1 + (int)l.[((stride) * lid) + 78]
        val2 <- val2 + (int)l.[((stride) * lid) + 79]
        val1 <- val1 + (int)l.[((stride) * lid) + 80]
        val2 <- val2 + (int)l.[((stride) * lid) + 81]
        val1 <- val1 + (int)l.[((stride) * lid) + 82]
        val2 <- val2 + (int)l.[((stride) * lid) + 83]
        val1 <- val1 + (int)l.[((stride) * lid) + 84]
        val2 <- val2 + (int)l.[((stride) * lid) + 85]
        val1 <- val1 + (int)l.[((stride) * lid) + 86]
        val2 <- val2 + (int)l.[((stride) * lid) + 87]
        val1 <- val1 + (int)l.[((stride) * lid) + 88]
        val2 <- val2 + (int)l.[((stride) * lid) + 89]
        val1 <- val1 + (int)l.[((stride) * lid) + 90]
        val2 <- val2 + (int)l.[((stride) * lid) + 91]
        val1 <- val1 + (int)l.[((stride) * lid) + 92]
        val2 <- val2 + (int)l.[((stride) * lid) + 93]
        val1 <- val1 + (int)l.[((stride) * lid) + 94]
        val2 <- val2 + (int)l.[((stride) * lid) + 95]
        val1 <- val1 + (int)l.[((stride) * lid) + 96]
        val2 <- val2 + (int)l.[((stride) * lid) + 97]
        val1 <- val1 + (int)l.[((stride) * lid) + 98]
        val2 <- val2 + (int)l.[((stride) * lid) + 99]
        val1 <- val1 + (int)l.[((stride) * lid) + 100]
        val2 <- val2 + (int)l.[((stride) * lid) + 101]
        val1 <- val1 + (int)l.[((stride) * lid) + 102]
        val2 <- val2 + (int)l.[((stride) * lid) + 103]
        val1 <- val1 + (int)l.[((stride) * lid) + 104]
        val2 <- val2 + (int)l.[((stride) * lid) + 105]
        val1 <- val1 + (int)l.[((stride) * lid) + 106]
        val2 <- val2 + (int)l.[((stride) * lid) + 107]
        val1 <- val1 + (int)l.[((stride) * lid) + 108]
        val2 <- val2 + (int)l.[((stride) * lid) + 109]
        val1 <- val1 + (int)l.[((stride) * lid) + 110]
        val2 <- val2 + (int)l.[((stride) * lid) + 111]
        val1 <- val1 + (int)l.[((stride) * lid) + 112]
        val2 <- val2 + (int)l.[((stride) * lid) + 113]
        val1 <- val1 + (int)l.[((stride) * lid) + 114]
        val2 <- val2 + (int)l.[((stride) * lid) + 115]
        val1 <- val1 + (int)l.[((stride) * lid) + 116]
        val2 <- val2 + (int)l.[((stride) * lid) + 117]
        val1 <- val1 + (int)l.[((stride) * lid) + 118]
        val2 <- val2 + (int)l.[((stride) * lid) + 119]
        val1 <- val1 + (int)l.[((stride) * lid) + 120]
        val2 <- val2 + (int)l.[((stride) * lid) + 101]
        val1 <- val1 + (int)l.[((stride) * lid) + 102]
        val2 <- val2 + (int)l.[((stride) * lid) + 103]
        val1 <- val1 + (int)l.[((stride) * lid) + 104]
        val2 <- val2 + (int)l.[((stride) * lid) + 105]
        val1 <- val1 + (int)l.[((stride) * lid) + 106]
        val2 <- val2 + (int)l.[((stride) * lid) + 107]
        val1 <- val1 + (int)l.[((stride) * lid) + 108]
        val2 <- val2 + (int)l.[((stride) * lid) + 109]
        val1 <- val1 + (int)l.[((stride) * lid) + 110]
        val2 <- val2 + (int)l.[((stride) * lid) + 111]
        val1 <- val1 + (int)l.[((stride) * lid) + 112]
        val2 <- val2 + (int)l.[((stride) * lid) + 113]
        val1 <- val1 + (int)l.[((stride) * lid) + 114]
        val2 <- val2 + (int)l.[((stride) * lid) + 115]
        val1 <- val1 + (int)l.[((stride) * lid) + 116]
        val2 <- val2 + (int)l.[((stride) * lid) + 117]
        val1 <- val1 + (int)l.[((stride) * lid) + 118]
        val2 <- val2 + (int)l.[((stride) * lid) + 119]
        val1 <- val1 + (int)l.[((stride) * lid) + 120]
        val2 <- val2 + (int)l.[((stride) * lid) + 101]
        val1 <- val1 + (int)l.[((stride) * lid) + 102]
        val2 <- val2 + (int)l.[((stride) * lid) + 103]
        val1 <- val1 + (int)l.[((stride) * lid) + 104]
        val2 <- val2 + (int)l.[((stride) * lid) + 105]
        val1 <- val1 + (int)l.[((stride) * lid) + 106]
        val2 <- val2 + (int)l.[((stride) * lid) + 107]
        val1 <- val1 + (int)l.[((stride) * lid) + 108]
        val2 <- val2 + (int)l.[((stride) * lid) + 109]
        val1 <- val1 + (int)l.[((stride) * lid) + 110]
        val2 <- val2 + (int)l.[((stride) * lid) + 111]
        val1 <- val1 + (int)l.[((stride) * lid) + 112]
        val2 <- val2 + (int)l.[((stride) * lid) + 113]
        val1 <- val1 + (int)l.[((stride) * lid) + 114]
        val2 <- val2 + (int)l.[((stride) * lid) + 115]
        val1 <- val1 + (int)l.[((stride) * lid) + 116]
        val2 <- val2 + (int)l.[((stride) * lid) + 117]
        val1 <- val1 + (int)l.[((stride) * lid) + 118]
        val2 <- val2 + (int)l.[((stride) * lid) + 119]
        val1 <- val1 + (int)l.[((stride) * lid) + 120]
        val2 <- val2 + (int)l.[((stride) * lid) + 121]
        val1 <- val1 + (int)l.[((stride) * lid) + 122]
        val2 <- val2 + (int)l.[((stride) * lid) + 123]
        val1 <- val1 + (int)l.[((stride) * lid) + 124]
        val2 <- val2 + (int)l.[((stride) * lid) + 125]
        val1 <- val1 + (int)l.[((stride) * lid) + 126]
        val2 <- val2 + (int)l.[((stride) * lid) + 127]
        val1 <- val1 + (int)l.[((stride) * lid) + 128]
        val2 <- val2 + (int)l.[((stride) * lid) + 129]
        val1 <- val1 + (int)l.[((stride) * lid) + 130]
        val2 <- val2 + (int)l.[((stride) * lid) + 131]
        val1 <- val1 + (int)l.[((stride) * lid) + 132]
        val2 <- val2 + (int)l.[((stride) * lid) + 133]
        val1 <- val1 + (int)l.[((stride) * lid) + 134]
        val2 <- val2 + (int)l.[((stride) * lid) + 135]
        val1 <- val1 + (int)l.[((stride) * lid) + 136]
        val2 <- val2 + (int)l.[((stride) * lid) + 137]
        val1 <- val1 + (int)l.[((stride) * lid) + 138]
        val2 <- val2 + (int)l.[((stride) * lid) + 139]
        val1 <- val1 + (int)l.[((stride) * lid) + 140]
        val2 <- val2 + (int)l.[((stride) * lid) + 141]
        val1 <- val1 + (int)l.[((stride) * lid) + 142]
        val2 <- val2 + (int)l.[((stride) * lid) + 143]
        val1 <- val1 + (int)l.[((stride) * lid) + 144]
        val2 <- val2 + (int)l.[((stride) * lid) + 145]
        val1 <- val1 + (int)l.[((stride) * lid) + 146]
        val2 <- val2 + (int)l.[((stride) * lid) + 147]
        val1 <- val1 + (int)l.[((stride) * lid) + 148]
        val2 <- val2 + (int)l.[((stride) * lid) + 149]
        val1 <- val1 + (int)l.[((stride) * lid) + 150]
        val2 <- val2 + (int)l.[((stride) * lid) + 151]
        val1 <- val1 + (int)l.[((stride) * lid) + 152]
        val2 <- val2 + (int)l.[((stride) * lid) + 153]
        val1 <- val1 + (int)l.[((stride) * lid) + 154]
        val2 <- val2 + (int)l.[((stride) * lid) + 155]
        val1 <- val1 + (int)l.[((stride) * lid) + 156]
        val2 <- val2 + (int)l.[((stride) * lid) + 157]
        val1 <- val1 + (int)l.[((stride) * lid) + 158]
        val2 <- val2 + (int)l.[((stride) * lid) + 159]
        val1 <- val1 + (int)l.[((stride) * lid) + 160]
        val2 <- val2 + (int)l.[((stride) * lid) + 161]
        val1 <- val1 + (int)l.[((stride) * lid) + 162]
        val2 <- val2 + (int)l.[((stride) * lid) + 163]
        val1 <- val1 + (int)l.[((stride) * lid) + 164]
        val2 <- val2 + (int)l.[((stride) * lid) + 165]
        val1 <- val1 + (int)l.[((stride) * lid) + 166]
        val2 <- val2 + (int)l.[((stride) * lid) + 167]
        val1 <- val1 + (int)l.[((stride) * lid) + 168]
        val2 <- val2 + (int)l.[((stride) * lid) + 169]
        val1 <- val1 + (int)l.[((stride) * lid) + 170]
        val2 <- val2 + (int)l.[((stride) * lid) + 171]
        val1 <- val1 + (int)l.[((stride) * lid) + 172]
        val2 <- val2 + (int)l.[((stride) * lid) + 173]
        val1 <- val1 + (int)l.[((stride) * lid) + 174]
        val2 <- val2 + (int)l.[((stride) * lid) + 175]
        val1 <- val1 + (int)l.[((stride) * lid) + 176]
        val2 <- val2 + (int)l.[((stride) * lid) + 177]
        val1 <- val1 + (int)l.[((stride) * lid) + 178]
        val2 <- val2 + (int)l.[((stride) * lid) + 179]
        val1 <- val1 + (int)l.[((stride) * lid) + 180]
        val2 <- val2 + (int)l.[((stride) * lid) + 181]
        val1 <- val1 + (int)l.[((stride) * lid) + 182]
        val2 <- val2 + (int)l.[((stride) * lid) + 183]
        val1 <- val1 + (int)l.[((stride) * lid) + 184]
        val2 <- val2 + (int)l.[((stride) * lid) + 185]
        val1 <- val1 + (int)l.[((stride) * lid) + 186]
        val2 <- val2 + (int)l.[((stride) * lid) + 187]
        val1 <- val1 + (int)l.[((stride) * lid) + 188]
        val2 <- val2 + (int)l.[((stride) * lid) + 189]
        val1 <- val1 + (int)l.[((stride) * lid) + 190]
        val2 <- val2 + (int)l.[((stride) * lid) + 191]
        val1 <- val1 + (int)l.[((stride) * lid) + 192]
        val2 <- val2 + (int)l.[((stride) * lid) + 193]
        val1 <- val1 + (int)l.[((stride) * lid) + 194]
        val2 <- val2 + (int)l.[((stride) * lid) + 195]
        val1 <- val1 + (int)l.[((stride) * lid) + 196]
        val2 <- val2 + (int)l.[((stride) * lid) + 197]
        val1 <- val1 + (int)l.[((stride) * lid) + 198]
        val2 <- val2 + (int)l.[((stride) * lid) + 199]
        val1 <- val1 + (int)l.[((stride) * lid) + 200]
        val2 <- val2 + (int)l.[((stride) * lid) + 201]
        val1 <- val1 + (int)l.[((stride) * lid) + 202]
        val2 <- val2 + (int)l.[((stride) * lid) + 203]
        val1 <- val1 + (int)l.[((stride) * lid) + 204]
        val2 <- val2 + (int)l.[((stride) * lid) + 205]
        val1 <- val1 + (int)l.[((stride) * lid) + 206]
        val2 <- val2 + (int)l.[((stride) * lid) + 207]
        val1 <- val1 + (int)l.[((stride) * lid) + 208]
        val2 <- val2 + (int)l.[((stride) * lid) + 209]
        val1 <- val1 + (int)l.[((stride) * lid) + 210]
        val2 <- val2 + (int)l.[((stride) * lid) + 211]
        val1 <- val1 + (int)l.[((stride) * lid) + 212]
        val2 <- val2 + (int)l.[((stride) * lid) + 213]
        val1 <- val1 + (int)l.[((stride) * lid) + 214]
        val2 <- val2 + (int)l.[((stride) * lid) + 215]
        val1 <- val1 + (int)l.[((stride) * lid) + 216]
        val2 <- val2 + (int)l.[((stride) * lid) + 217]
        val1 <- val1 + (int)l.[((stride) * lid) + 218]
        val2 <- val2 + (int)l.[((stride) * lid) + 219]
        val1 <- val1 + (int)l.[((stride) * lid) + 220]
        val2 <- val2 + (int)l.[((stride) * lid) + 221]
        val1 <- val1 + (int)l.[((stride) * lid) + 222]
        val2 <- val2 + (int)l.[((stride) * lid) + 223]
        val1 <- val1 + (int)l.[((stride) * lid) + 224]
        val2 <- val2 + (int)l.[((stride) * lid) + 225]
        val1 <- val1 + (int)l.[((stride) * lid) + 226]
        val2 <- val2 + (int)l.[((stride) * lid) + 227]
        val1 <- val1 + (int)l.[((stride) * lid) + 228]
        val2 <- val2 + (int)l.[((stride) * lid) + 229]
        val1 <- val1 + (int)l.[((stride) * lid) + 230]
        val2 <- val2 + (int)l.[((stride) * lid) + 231]
        val1 <- val1 + (int)l.[((stride) * lid) + 232]
        val2 <- val2 + (int)l.[((stride) * lid) + 233]
        val1 <- val1 + (int)l.[((stride) * lid) + 234]
        val2 <- val2 + (int)l.[((stride) * lid) + 235]
        val1 <- val1 + (int)l.[((stride) * lid) + 236]
        val2 <- val2 + (int)l.[((stride) * lid) + 237]
        val1 <- val1 + (int)l.[((stride) * lid) + 238]
        val2 <- val2 + (int)l.[((stride) * lid) + 239]
        val1 <- val1 + (int)l.[((stride) * lid) + 240]
        val2 <- val2 + (int)l.[((stride) * lid) + 241]
        val1 <- val1 + (int)l.[((stride) * lid) + 242]
        val2 <- val2 + (int)l.[((stride) * lid) + 243]
        val1 <- val1 + (int)l.[((stride) * lid) + 244]
        val2 <- val2 + (int)l.[((stride) * lid) + 245]
        val1 <- val1 + (int)l.[((stride) * lid) + 246]
        val2 <- val2 + (int)l.[((stride) * lid) + 247]
        val1 <- val1 + (int)l.[((stride) * lid) + 248]
        val2 <- val2 + (int)l.[((stride) * lid) + 249]
        val1 <- val1 + (int)l.[((stride) * lid) + 250]
        val2 <- val2 + (int)l.[((stride) * lid) + 251]
        val1 <- val1 + (int)l.[((stride) * lid) + 252]
        val2 <- val2 + (int)l.[((stride) * lid) + 253]
        val1 <- val1 + (int)l.[((stride) * lid) + 254]
        val2 <- val2 + (int)l.[((stride) * lid) + 255]
        o.[wi.GlobalID(0)] <- val1 + val2

    [<ReflectedDefinition>]
    static member private LDSBankTest([<AddressSpace(AddressSpace.Local)>] l:int[], o:int[], stride: int, strideMult: int, wi:WorkItemInfo) =
        let gid = wi.GlobalID(0)
        l.[gid] <- (int)(gid % 255)
        let lid = wi.LocalID(0)

        // Test reading with a stride
        let mutable val1 = 0
        let mutable val2 = val1 
        val1 <- val1 + (int)l.[(stride * strideMult) * lid]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 1]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 2]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 3]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 4]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 5]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 6]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 7]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 8]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 9]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 10]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 11]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 12]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 13]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 14]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 15]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 16]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 17]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 18]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 19]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 20]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 21]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 22]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 23]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 24]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 25]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 26]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 27]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 28]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 29]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 30]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 31]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 32]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 33]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 34]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 35]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 36]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 37]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 38]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 39]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 40]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 41]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 42]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 43]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 44]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 45]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 46]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 47]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 48]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 49]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 50]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 51]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 52]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 53]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 54]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 55]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 56]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 57]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 58]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 59]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 60]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 61]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 62]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 63]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 64]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 65]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 66]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 67]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 68]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 69]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 70]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 71]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 72]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 73]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 74]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 75]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 76]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 77]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 78]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 79]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 80]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 81]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 82]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 83]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 84]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 85]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 86]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 87]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 88]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 89]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 90]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 91]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 92]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 93]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 94]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 95]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 96]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 97]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 98]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 99]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 100]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 101]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 102]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 103]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 104]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 105]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 106]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 107]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 108]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 109]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 110]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 111]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 112]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 113]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 114]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 115]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 116]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 117]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 118]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 119]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 120]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 101]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 102]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 103]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 104]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 105]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 106]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 107]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 108]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 109]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 110]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 111]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 112]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 113]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 114]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 115]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 116]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 117]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 118]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 119]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 120]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 101]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 102]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 103]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 104]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 105]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 106]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 107]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 108]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 109]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 110]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 111]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 112]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 113]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 114]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 115]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 116]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 117]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 118]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 119]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 120]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 121]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 122]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 123]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 124]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 125]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 126]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 127]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 128]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 129]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 130]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 131]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 132]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 133]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 134]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 135]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 136]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 137]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 138]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 139]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 140]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 141]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 142]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 143]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 144]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 145]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 146]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 147]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 148]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 149]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 150]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 151]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 152]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 153]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 154]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 155]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 156]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 157]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 158]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 159]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 160]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 161]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 162]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 163]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 164]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 165]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 166]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 167]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 168]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 169]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 170]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 171]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 172]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 173]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 174]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 175]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 176]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 177]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 178]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 179]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 180]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 181]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 182]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 183]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 184]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 185]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 186]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 187]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 188]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 189]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 190]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 191]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 192]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 193]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 194]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 195]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 196]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 197]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 198]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 199]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 200]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 201]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 202]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 203]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 204]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 205]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 206]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 207]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 208]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 209]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 210]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 211]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 212]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 213]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 214]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 215]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 216]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 217]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 218]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 219]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 220]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 221]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 222]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 223]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 224]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 225]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 226]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 227]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 228]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 229]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 230]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 231]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 232]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 233]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 234]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 235]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 236]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 237]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 238]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 239]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 240]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 241]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 242]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 243]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 244]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 245]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 246]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 247]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 248]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 249]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 250]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 251]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 252]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 253]
        val1 <- val1 + (int)l.[((stride * strideMult) * lid) + 254]
        val2 <- val2 + (int)l.[((stride * strideMult) * lid) + 255]
        o.[wi.GlobalID(0)] <- val1 + val2

    member private this.FindLDSLineSize(pIndex: int, dIndex: int) =
        // Create wavefront test
        let localSize = 256
        let globalSize = 2 <<< 20
        let tries = 100
        let strideMax = 32

        let o = Array.zeroCreate<int> (globalSize)
        let localArr = Array.zeroCreate<char>((0 * localSize) + 255)

        // Ensure compilation overhead excluded
        let ws = new WorkSize(o.LongLength, localSize |> int64)
        let comp = <@ DEVICE(pIndex, dIndex, 
                             LDSBenchmark.LDSStrideTest(localArr, o, 0, ws)) @>
        comp.Run()

        // Now start from 1 and increase to see no conflicts 
        let raises = Array.zeroCreate<int64> (strideMax + 1)
        let mutable lastTime = 0L
        let elSize = Marshal.SizeOf(localArr.GetType().GetElementType())

        for stride = 0 to strideMax do
            let localArr = Array.zeroCreate<char>((stride * localSize) + 255)
            let comp = <@ DEVICE(pIndex, dIndex, 
                                 LDSBenchmark.LDSStrideTest(localArr, o, stride, ws)) @>
            let timer = new Stopwatch()
            timer.Start()
            for i = 0 to 100 do
                comp.Run()
            timer.Stop()
            let currentTime = timer.ElapsedMilliseconds
            Console.WriteLine("Stride " + (stride * elSize).ToString() + " bytes: " + currentTime.ToString() + " ms")

            // Update delta with prec
            if stride > 0 then 
                raises.[stride - 1] <- currentTime - lastTime
            lastTime <- currentTime
        
        // Now get the sum of deltas of each bucket and multiple
        let raisesSum = new List<int>()
        raisesSum.Add(0)
        for i = 1 to raises.Length - 2 do
            let mutable currMult = 1
            let mutable sum = 0
            while (currMult * i) < raises.Length do
                sum <- sum + (raises.[currMult * i] |> int)
                currMult <- currMult + 1
            raisesSum.Add(sum)

        // Find lds line as max of dropsSum
        let mutable ldsLine = 0
        let mutable maxRaise = Int32.MinValue
        for i = 0 to raisesSum.Count - 1 do
            if raisesSum.[i] > maxRaise then
                ldsLine <- i
                maxRaise <- raisesSum.[i]
        Console.WriteLine("LDS line is " + (ldsLine * elSize).ToString() + " bytes")
        ldsLine * 4

    member private this.FindLDSBanksCount(stride: int, pIndex: int, dIndex: int) =
        // Create wavefront test
        let localSize = 256L
        let globalSize = 2 <<< 20
        let tries = 100
        let strideMax = 32
        let o = Array.zeroCreate<int> (2 <<< 20)
        let localArr = Array.zeroCreate<int>((((stride / 4) * 1) * (localSize |> int)) + 255)

        // Ensure compilation overhead excluded
        let ws = new WorkSize(o.LongLength, localSize)
        let comp = <@ DEVICE(pIndex, dIndex, 
                             LDSBenchmark.LDSBankTest(localArr, o, 0, 1, ws)) @>
        comp.Run()

        // Now use optimal stride and try to increase work size until we find a peak
        let drops = Array.zeroCreate<int> 512
        let mutable lastTime = 0L

        for lineMult = 1 to 32 do
            let localArr = Array.zeroCreate<int>((((stride / 4) * lineMult) * (localSize |> int)) + 255)
            let comp = <@ DEVICE(pIndex, dIndex, 
                                 LDSBenchmark.LDSBankTest(localArr, o, stride, lineMult, ws)) @>
            let timer = new Stopwatch()
            timer.Start()
            for i = 0 to 50 do
                comp.Run()
            timer.Stop()
            let currentTime = timer.ElapsedMilliseconds
            Console.WriteLine(lineMult.ToString() + " banks: " + currentTime.ToString() + " ms")

    // Update drops
    member this.Execute(pIndex: int, dIndex: int) =
        let line = this.FindLDSLineSize(pIndex, dIndex)
        this.FindLDSBanksCount(line + 4, pIndex, dIndex)
            
                    
        

                        
